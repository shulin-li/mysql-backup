<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lsl.mapper.SlaveMapper" >
  <resultMap id="BaseResultMap" type="com.lsl.po.Slave" >
    <id column="host" property="host" jdbcType="VARCHAR" />
    <result column="instance_password" property="instancePassword" jdbcType="VARCHAR" />
    <result column="isntancec_user" property="isntancecUser" jdbcType="VARCHAR" />
    <result column="isuse" property="isuse" jdbcType="INTEGER" />
    <result column="masterid" property="masterid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    host, instance_password, isntancec_user, isuse, masterid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lsl.po.SlaveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from slave
    where host = #{host,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from slave
    where host = #{host,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lsl.po.SlaveExample" >
    delete from slave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lsl.po.Slave" >
    insert into slave (host, instance_password, isntancec_user, 
      isuse, masterid)
    values (#{host,jdbcType=VARCHAR}, #{instancePassword,jdbcType=VARCHAR}, #{isntancecUser,jdbcType=VARCHAR}, 
      #{isuse,jdbcType=INTEGER}, #{masterid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lsl.po.Slave" >
    insert into slave
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        host,
      </if>
      <if test="instancePassword != null" >
        instance_password,
      </if>
      <if test="isntancecUser != null" >
        isntancec_user,
      </if>
      <if test="isuse != null" >
        isuse,
      </if>
      <if test="masterid != null" >
        masterid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="instancePassword != null" >
        #{instancePassword,jdbcType=VARCHAR},
      </if>
      <if test="isntancecUser != null" >
        #{isntancecUser,jdbcType=VARCHAR},
      </if>
      <if test="isuse != null" >
        #{isuse,jdbcType=INTEGER},
      </if>
      <if test="masterid != null" >
        #{masterid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lsl.po.SlaveExample" resultType="java.lang.Integer" >
    select count(*) from slave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update slave
    <set >
      <if test="record.host != null" >
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.instancePassword != null" >
        instance_password = #{record.instancePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.isntancecUser != null" >
        isntancec_user = #{record.isntancecUser,jdbcType=VARCHAR},
      </if>
      <if test="record.isuse != null" >
        isuse = #{record.isuse,jdbcType=INTEGER},
      </if>
      <if test="record.masterid != null" >
        masterid = #{record.masterid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update slave
    set host = #{record.host,jdbcType=VARCHAR},
      instance_password = #{record.instancePassword,jdbcType=VARCHAR},
      isntancec_user = #{record.isntancecUser,jdbcType=VARCHAR},
      isuse = #{record.isuse,jdbcType=INTEGER},
      masterid = #{record.masterid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsl.po.Slave" >
    update slave
    <set >
      <if test="instancePassword != null" >
        instance_password = #{instancePassword,jdbcType=VARCHAR},
      </if>
      <if test="isntancecUser != null" >
        isntancec_user = #{isntancecUser,jdbcType=VARCHAR},
      </if>
      <if test="isuse != null" >
        isuse = #{isuse,jdbcType=INTEGER},
      </if>
      <if test="masterid != null" >
        masterid = #{masterid,jdbcType=INTEGER},
      </if>
    </set>
    where host = #{host,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsl.po.Slave" >
    update slave
    set instance_password = #{instancePassword,jdbcType=VARCHAR},
      isntancec_user = #{isntancecUser,jdbcType=VARCHAR},
      isuse = #{isuse,jdbcType=INTEGER},
      masterid = #{masterid,jdbcType=INTEGER}
    where host = #{host,jdbcType=VARCHAR}
  </update>
</mapper>